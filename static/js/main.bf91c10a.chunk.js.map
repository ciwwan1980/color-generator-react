{"version":3,"sources":["SingleColor.js","App.js","index.js"],"names":["SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAmCeA,EAhCK,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,IAAIC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAAc,EAEzBC,oBAAS,GAFgB,mBAE5CC,EAF4C,KAErCC,EAFqC,KAI7CC,EAAMP,EAAIQ,KAAK,KAGfC,EAAQ,WAAON,GAStB,OAPCO,qBAAU,WACV,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAEI,0BACHS,UAAS,gBAAWZ,EAAQ,IAAM,eACjCa,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAT,MACxBU,QAAS,WACTX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IAL5B,UASR,4BAAIN,IACJ,oBAAGW,UAAU,gBAAb,UAA8Bb,EAA9B,OACA,mBAAGa,UAAU,cAAb,SAA4BL,IACzBJ,GAAS,mBAAGS,UAAU,QAAb,qC,gBC6BCO,MAxDf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAkBb,OACE,qCACE,0BAASf,UAAU,YAAnB,UACE,iDAEA,uBAAMgB,SAjBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCO,QAAQC,IAAIF,EAAQ,UACpBJ,EAAQI,GACR,MAAOT,GACPC,GAAS,GACTS,QAAQC,IAAIX,KASV,UACE,uBACEY,KAAK,OACLC,MAAOf,EACPgB,SAAU,SAACP,GACTR,EAASQ,EAAEQ,OAAOF,QAEpBG,YAAY,UACZ1B,UAAS,UAAKU,EAAQ,QAAU,QAGlC,wBAAQV,UAAU,MAAMsB,KAAK,SAA7B,0BAMJ,yBAAStB,UAAU,SAAnB,SACGc,EAAKa,KAAI,SAACnB,EAAOpB,GAChB,OACE,cAAC,EAAD,2BAEMoB,GAFN,IAGEpB,MAAOA,EACPC,SAAUmB,EAAMoB,MAHXxC,YC3CnByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bf91c10a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({rgb,weight, index, hexColor}) => {\n  // console.log(hexColor, \"hexColor\")\n    const [alert, setAlert] = useState(false)\n\n    const bcg = rgb.join(',')\n    // const hex = rgbToHex(...rgb)\n    \n    const hexValue = `#${hexColor}`\n\n    useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false)\n    }, 4000)\n    return () => clearTimeout(timeout)\n  }, [alert])\n  \n   return <article \n       className={`color ${index > 10 && 'color-light'}`}\n        style={{ backgroundColor: `rgb(${bcg})` }}\n        onClick={() => {\n        setAlert(true)\n        navigator.clipboard.writeText(hexValue)\n      }}\n   >\n\n  <p>{hexColor}</p>\n  <p className=\"percent-value\">{weight}%</p>\n  <p className='color-value'>{hexValue}</p>\n    {alert && <p className='alert'>copied to clipboard</p>}\n  </article>\n}\n\nexport default SingleColor\n","import React, { useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\nimport Values from \"values.js\";\n\nfunction App() {\n  const [color, setColor] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values(\"#f15025\").all(10));\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10);\n      console.log(colors, \"colors\")\n      setList(colors);\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <section className=\"container\">\n        <h3>color Generator</h3>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={color}\n            onChange={(e) => {\n              setColor(e.target.value);\n            }}\n            placeholder=\"#f15025\"\n            className={`${error ? \"error\" : null}`}\n          />\n\n          <button className=\"btn\" type=\"submit\">\n            submit\n          </button>\n        </form>\n      </section>\n\n      <section className=\"colors\">\n        {list.map((color, index) => {\n          return (\n            <SingleColor\n              key={index}\n              {...color}\n              index={index}\n              hexColor={color.hex}\n            />\n          );\n        })}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}